name: GPU Tests (Simple)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  CODEBUILD_PROJECT_NAME: gsdr-gpu-tests

jobs:
  gpu-tests:
    name: Run GPU Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_CODEBUILD_ROLE_ARN }}
        role-session-name: GitHub-Actions-Session
        aws-region: ${{ env.AWS_REGION }}

    - name: Run GPU Tests
      uses: aws-actions/aws-codebuild-run-build@v1
      with:
        project-name: ${{ env.CODEBUILD_PROJECT_NAME }}
        primary-source: ${{ github.workspace }}

    - name: Generate test summary
      if: always()
      run: |
        echo "## GPU Test Results" > gpu_test_summary.md
        echo "" >> gpu_test_summary.md

        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ **GPU Tests PASSED**" >> gpu_test_summary.md
          echo "All tests completed successfully on AWS CodeBuild GPU instance." >> gpu_test_summary.md
        else
          echo "❌ **GPU Tests FAILED**" >> gpu_test_summary.md
          echo "Test failures detected. Check CodeBuild logs for details." >> gpu_test_summary.md
        fi

        echo "" >> gpu_test_summary.md
        echo "### Environment" >> gpu_test_summary.md
        echo "- CodeBuild Project: ${{ env.CODEBUILD_PROJECT_NAME }}" >> gpu_test_summary.md
        echo "- AWS Region: ${{ env.AWS_REGION }}" >> gpu_test_summary.md
        echo "- Commit: ${{ github.sha }}" >> gpu_test_summary.md
        echo "- Branch: ${{ github.ref }}" >> gpu_test_summary.md

    - name: Comment PR with results
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = 'gpu_test_summary.md';

          if (fs.existsSync(path)) {
            const summary = fs.readFileSync(path, 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          }