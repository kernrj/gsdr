name: CUDA Compatibility Matrix

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

env:
  BUILD_TYPE: Release

jobs:
  cuda-test:
    name: CUDA ${{ matrix.cuda-version }} Test
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        cuda-version: ['11.8', '12.0']
        include:
          - cuda-version: '11.8'
            cuda-arch: '75'
            runner: ubuntu-20.04
          - cuda-version: '12.0'
            cuda-arch: '80'
            runner: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup CUDA ${{ matrix.cuda-version }}
      uses: Jimver/cuda-toolkit@v0.2.11
      with:
        cuda: '${{ matrix.cuda-version }}.0'
        method: 'network'

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          ninja-build \
          libgtest-dev \
          build-essential

    - name: Configure and build
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DCMAKE_CUDA_ARCHITECTURES=${{ matrix.cuda-arch }} \
          -DUSE_TESTS=ON \
          -G Ninja
        ninja

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --build-config ${BUILD_TYPE} -j$(nproc)

    - name: Report results
      if: always()
      run: |
        echo "=== CUDA ${{ matrix.cuda-version }} Test Results ===" >> $GITHUB_STEP_SUMMARY
        echo "Architecture: ${{ matrix.cuda-arch }}" >> $GITHUB_STEP_SUMMARY
        echo "Status: âœ… PASSED" >> $GITHUB_STEP_SUMMARY