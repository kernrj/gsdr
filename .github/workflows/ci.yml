name: CI

on:
  pull_request:
    branches: [ main, develop ]
    types: [ opened, synchronize, reopened, ready_for_review ]
  push:
    branches: [ main, develop ]

env:
  BUILD_TYPE: Release
  CUDA_ARCH: "75"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up CUDA
      uses: Jimver/cuda-toolkit@v0.2.11
      id: cuda-toolkit
      with:
        cuda: '11.8.0'
        method: 'network'
        sub-packages: '["nvcc", "cuda-runtime", "cuda-toolkit"]'

    - name: Verify CUDA installation
      run: |
        echo "CUDA Version:"
        nvcc --version
        echo "CUDA Path: $CUDA_PATH"
        echo "CUDA Toolkit Root: $CUDA_TOOLKIT_ROOT_DIR"

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          ninja-build \
          libgtest-dev \
          pkg-config \
          build-essential

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
          -DCMAKE_CUDA_ARCHITECTURES=${CUDA_ARCH} \
          -DUSE_TESTS=ON \
          -G Ninja

    - name: Build project
      run: |
        cd build
        ninja

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure --build-config ${BUILD_TYPE}

    - name: Generate test report
      if: always()
      run: |
        cd build
        # Run tests with verbose output and save to file
        ctest --output-on-failure --build-config ${BUILD_TYPE} -V > test_results.txt 2>&1 || true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: build/test_results.txt
        retention-days: 30

    - name: Check test status
      run: |
        if [ -f build/test_results.txt ]; then
          if grep -q "Failed" build/test_results.txt; then
            echo "Some tests failed. Check the test results artifact for details."
            exit 1
          else
            echo "All tests passed!"
          fi
        else
          echo "No test results found"
          exit 1
        fi